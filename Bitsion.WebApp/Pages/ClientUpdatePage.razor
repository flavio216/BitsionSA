@page "/Update"

@using Entities
@using Business
@using Bitsion.WebApp.Helpers

@inject NavigationManager NavManager
@inject IJSRuntime JsRuntime
@inject HttpClient Http
<html lang="en">

<body>
    <div class="container px-lg-5">
        <div class="row mx-lg-n5">
            <div class="col py-3 px-lg-5 border bg-light">
                <EditForm Model="client" OnValidSubmit="@SaveClient">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        <label>Dni:</label>
                        <InputText @bind-Value="client.cli_Dni" maxlength="8" minlength="7" max="99999999" placeholder="Ingrese su dni" class="form-control"></InputText>
                        <ValidationMessage For="@(() => client.cli_Dni)" />
                    </div>
                    <div class="form-group">
                        <label>Nombre:</label>
                        <InputText type="text" @bind-Value="client.cli_Name" placeholder="Ingrese su Nombre" class="form-control" required />
                        <ValidationMessage For="@(() => client.cli_Name)" />
                    </div>
                    <div class="form-group">
                        <label>Sexo:</label>
                        <InputSelectNumber @bind-Value="client.cli_gen_Gender" class="form-control">
                            @foreach (var g in genders)
                            {
        <option value="@g.gen_Id">@g.gen_Gender</option>}
                        </InputSelectNumber>
                    </div>
                    <div class="form-group">
                        <label>¿Maneja??</label>
                        <InputCheckbox @bind-Value="client.cli_Drive" class="form-control"></InputCheckbox>
                    </div>
                    <div class="form-group">
                        <label>¿Es diabetico?</label>
                        <InputCheckbox @bind-Value="client.cli_Diabetic" class="form-control"></InputCheckbox>
                    </div>
                    <div class="form-group">
                        <label>¿Otras enfermedades?</label>
                        <InputCheckbox @bind-Value="client.cli_OtherDiseases" class="form-control"></InputCheckbox>
                    </div>
                    @if (client.cli_OtherDiseases)
                    {
                    <div class="form-group">
                        <label>Indique Cual.</label>
                        <InputTextArea @bind-Value="client.cli_Diseases" class="form-control"></InputTextArea>
                        <ValidationMessage For="@(() => client.cli_Diseases)" />
                    </div>}

                    <input type="submit"class="btn btn-dark btn-lg btn-block"  value="Actualizar Cliente" />
                    <p>@sucess</p>
                </EditForm>

                <div class="col py-3 px-lg-5 border bg-light">
                    <img src="/images/img1.jpg" class="img-fluid" alt="Responsive image" />
                </div>
            </div>
        </div>
    </div>
    <br />
    <br />
    <br />
    <br />
    <div class="container-fluid bg-danger">
        <img src="img_club_futbol/111111.jpg"  class="rounded mx-auto d-block"alt="..." />
    </div>


</body>
</html>
@code { [Parameter]
    public string personId { get; set; }

    Client client = new Client();
    List<Gender> genders = new List<Gender>();
    string sucess;

    protected override async Task OnInitializedAsync()
    {
        genders = await Http.GetJsonAsync<List<Gender>>
        ("https://localhost:44343/api/gender/list");
        client.cli_gen_Gender = 1;
    }


    public async Task<string> SaveClient()
    {
        var response = await Http.PostAsJsonAsync("https://localhost:44343/api/client/updateClient", client);
        sucess = response.StatusCode.ToString();
        return response.StatusCode.ToString();
    }
 }
